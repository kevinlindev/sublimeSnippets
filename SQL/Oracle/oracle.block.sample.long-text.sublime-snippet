<snippet>
  <content><![CDATA[
SET DEFINE OFF;
DECLARE
  vClobVal CLOB;
BEGIN
  CORE.AUDIT_OPEN('SASQL-900');
  vClobVal := '{"sfFormProperties":{"items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Header","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<h3>Add Title Details</h3>","title":"HTML Content","type":"help"},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-header"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Body","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"3-Column Section"},"sfFormProperties":{"type":"section","title":"3-Column Section","htmlClass":"row","items":[{"editorId":"sfb-editor-section-col","$builder-settings":{"componentName":"Section (div.col)"},"sfFormProperties":{"type":"section","title":"Section (div.col) 1","htmlClass":"col-sm-4","items":[{"key":"register","editorId":"sfb-editor-select","$builder-settings":{"componentName":"Single Select","dirty":true},"sfFormProperties":{"type":"select","title":"Register","tooltip":"","titleMap":[{"value":"CT","name":"CT"},{"value":"CL","name":"CL"}],"notitle":false,"readonly":false,"focusOnStart":false,"feedback":false},"sfSchemaProperties":{"required":true,"type":"string","defaultBoolean":false,"defaultString":"CT","default":"CT"}}]}},{"editorId":"sfb-editor-section-col","$builder-settings":{"componentName":"Section (div.col)"},"sfFormProperties":{"type":"section","title":"Section (div.col) 2","htmlClass":"col-sm-4","items":[{"key":"volume","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true,"keyManuallyEdited":true},"sfFormProperties":{"title":"Volume","type":"text","tooltip":"","placeholder":"","notitle":false,"readonly":false,"focusOnStart":false,"feedback":false,"ngModelOptions":{"updateOn":"blur"}},"sfSchemaProperties":{"required":true,"type":"string"}}]}},{"editorId":"sfb-editor-section-col","$builder-settings":{"componentName":"Section (div.col)"},"sfFormProperties":{"type":"section","title":"Section (div.col) 3","htmlClass":"col-sm-4","items":[{"key":"folio","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true},"sfFormProperties":{"title":"Folio","type":"text","tooltip":"","placeholder":"","notitle":false,"readonly":false,"focusOnStart":false,"feedback":false,"ngModelOptions":{"updateOn":"blur"}},"sfSchemaProperties":{"required":true,"type":"string"}}]}}]}},{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div ng-if=\"form.httpPending\" class=\"hidden\">\n  {{ evalExpr(\"titleDetailExists = false\") | json | limitTo:0 }}\n  {{ model.holdingId = undefined | json | limitTo:0 }}\n  {{ model.titleReference = undefined | json | limitTo:0 }}\n  {{ model.propertyLocation = undefined | json | limitTo:0 }}\n  {{ model.ownershipNumber = undefined | json | limitTo:0 }}\n</div>\n<div ng-if=\"!form.httpPending\" style=\"margin-top: 20px\">\n  <div ng-if=\"!templateData\" class=\"alert alert-danger\">\n    There are no matching current titles for the supplied search.\n  </div>\n  <div ng-if=\"templateData && !utils.checkTitleOwnershipIsDifferent(templateData.ownershipNumber, evalExpr(''$$ctrl$$'').parentModel.affectedTitles)\" class=\"alert alert-success\">\n    {{ evalExpr(\"titleDetailExists = true\") | json | limitTo:0 }}\n    {{ evalExpr(\"differentOwnership = false\") | json | limitTo:0 }}\n    {{ templateData.titleReference }}\n    {{ model.holdingId = templateData.holdingId | json | limitTo:0 }}\n    {{ model.titleReference = templateData.titleReference | json | limitTo:0 }}\n    {{ model.propertyLocation = templateData.propertyLocation | json | limitTo:0 }}\n    {{ model.ownershipNumber = templateData.ownershipNumber | json | limitTo:0}}\n  </div>\n  <div ng-if=\"templateData && utils.checkTitleOwnershipIsDifferent(templateData.ownershipNumber, evalExpr(''$$ctrl$$'').parentModel.affectedTitles)\"\n    class=\"alert alert-warning\">\n    {{ evalExpr(\"titleDetailExists = true\") | json | limitTo:0 }}\n    {{ evalExpr(\"differentOwnership = true\") | json | limitTo:0 }}\n    Titles selected ({{ templateData.titleReference }}) have different ownerships. Make sure you wish to proceed?\n    {{ model.holdingId = templateData.holdingId | json | limitTo:0 }}\n    {{ model.titleReference = templateData.titleReference | json | limitTo:0 }}\n    {{ model.propertyLocation = templateData.propertyLocation | json | limitTo:0 }}\n    {{ model.ownershipNumber = templateData.ownershipNumber | json | limitTo:0}}\n  </div>\n</div>","title":"Title Detail Fetcher","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5,"condition":"model.register && model.volume && model.folio","dataURL":"/products/titleselection/searchtitle?register={model.register}&volume={model.volume}&folio={model.folio}"},"sfSchemaProperties":{}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div.row)"},"sfFormProperties":{"type":"section","title":"Section (div.row)","htmlClass":"row","items":[{"editorId":"sfb-editor-section-col","$builder-settings":{"componentName":"Section (div.col)","dirty":true},"sfFormProperties":{"type":"section","title":"Section (div.col)","htmlClass":"col-sm-12","items":[{"key":"portionOfLandFlag","editorId":"sfb-editor-radios","$builder-settings":{"componentName":"Radios","dirty":true},"sfFormProperties":{"type":"radios","title":"Whole or Portion of Land?","tooltip":"","titleMap":[{"value":"N","name":"Whole Of Land"},{"value":"Y","name":"Portion Of Land"}],"notitle":false,"readonly":false,"focusOnStart":false},"sfSchemaProperties":{"required":true,"type":"string","defaultBoolean":false,"defaultString":"N","default":"N"}}]}}]}},{"editorId":"sfb-editor-fieldset","$builder-settings":{"componentName":"Field Set","dirty":true},"sfFormProperties":{"type":"fieldset","title":"Portion Details","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"2-Column Section"},"sfFormProperties":{"type":"section","title":"2 Column Section","htmlClass":"row","items":[{"editorId":"sfb-editor-section-col","$builder-settings":{"componentName":"2-Column Section"},"sfFormProperties":{"type":"section","title":"Section (div.col) 1","htmlClass":"col-sm-6","items":[{"key":"planType","editorId":"sfb-editor-select","$builder-settings":{"componentName":"Single Select","dirty":true},"sfFormProperties":{"type":"select","title":"Plan Type","tooltip":"","titleMap":[{"value":"","name":"-- Please Select --"},{"value":"D","name":"Deposited Plan"},{"value":"C","name":"Community Plan"},{"value":"S","name":"Strata Plan"},{"value":"F","name":"Filed Plan"},{"value":"H","name":"Hundred Plan"},{"value":"R","name":"Road Plan"},{"value":"T","name":"Township Plan"},{"value":"G","name":"General Registry Office Divison Plan"}],"notitle":false,"readonly":false,"focusOnStart":false},"sfSchemaProperties":{"required":false,"type":"string","defaultBoolean":false,"defaultString":"","default":""}}]}},{"editorId":"sfb-editor-section-col","$builder-settings":{"componentName":"2-Column Section"},"sfFormProperties":{"type":"section","title":"Section (div.col) 2","htmlClass":"col-sm-6","items":[{"key":"planNumber","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true,"keyManuallyEdited":true},"sfFormProperties":{"title":"Plan Number","type":"text","notitle":false,"readonly":false,"focusOnStart":false,"htmlClass":"inline-element"},"sfSchemaProperties":{"required":false,"type":"string"}},{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<div id=\"HELP_Plan Number\" class=\"hiddenHelp\"><div class=\"fieldHelpIcon\"></div><span><div class=\"fieldHelpTitle\">SAILIS Help</div><div class=\"fieldHelpText\">The format for entering a Plan Number is generally numeric however this will be dependant on your selected Plan Type. <br> Some uncommon examples or those that include alpha characters (in uppercase) include, but are not limited to:\n- DR Docket Plan (123/54P3) - GRO Plan (116/1855)\n- SD Docket Plan (1P35) - Drawer Plan (137/6) - Survey Graphic Plan (662840R)\nSee Image Search help for more information</div></span></div>","title":"Helper Tip","type":"help","htmlClass":"inline-element"},"sfSchemaProperties":{}}]}}]}},{"key":"parcelDescription","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true},"sfFormProperties":{"title":"Parcel Description","type":"text","tooltip":"The format for entering a Plan Number is generally numeric however this will be dependant on your selected Plan Type. <br> Some uncommon examples or those that include alpha characters (in uppercase) include, but are not limited to: - DR Docket Plan (123/54P3) - GRO Plan (116/1855) - SD Docket Plan (1P35) - Drawer Plan (137/6) - Survey Graphic Plan (662840R) See Image Search help for more information","notitle":false,"readonly":false,"focusOnStart":false,"ngModelOptions":{"updateOn":"default"},"htmlClass":"inline-element"},"sfSchemaProperties":{"required":false,"type":"string"}},{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<div id=\"HELP_Parcel Description\" class=\"hiddenHelp\"><div class=\"fieldHelpIcon\"></div><span><div class=\"fieldHelpTitle\">SAILIS Help</div><div class=\"fieldHelpText\">This is a free text field.</div></span></div>","title":"Helper Tip","type":"help","htmlClass":"inline-element"},"sfSchemaProperties":{}}],"readonly":false,"condition":"model.portionOfLandFlag === ''Y''"}},{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div ng-if=\"utils.checkTitleDetailHasDuplication(model, evalExpr(''$$ctrl$$'').parentModel.affectedTitles)\"\n  class=\"alert alert-danger\" style=\"margin-top: 20px\">\n  {{ evalExpr(\"titleDetailDuplicated = true\") | json | limitTo:0 }}\n  {{ utils.getTitleReferenceWithLocationOrPortionDetails(model) }} has already been entered.\n</div>\n<div ng-if=\"!utils.checkTitleDetailHasDuplication(model, evalExpr(''$$ctrl$$'').parentModel.affectedTitles)\"\n  class=\"hidden\">\n{{ evalExpr(\"titleDetailDuplicated = false\") | json | limitTo:0 }}\n</div>","title":"Title Detail Duplication Checker","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5,"condition":"model.register && model.volume && model.folio && model.holdingId"},"sfSchemaProperties":{}},{"editorId":"sfb-editor-btn-group","$builder-settings":{"componentName":"Button Group"},"sfFormProperties":{"type":"btn-group","title":"Button Group","items":[{"editorId":"sfb-editor-button","$builder-settings":{"componentName":"Modal Cancel Button","dirty":true},"sfFormProperties":{"type":"rds-asf-modal-cancel","btnRefId":"cancel","title":"Cancel","style":"btn btn-default","onClick":"$$ctrl$$.cancelModal();"}},{"editorId":"sfb-editor-button","$builder-settings":{"componentName":"Modal Save Button","dirty":true},"sfFormProperties":{"type":"rds-asf-modal-save","btnRefId":"save","title":"OK","style":"btn btn-primary","onClick":"$$ctrl$$.submitModal(true);","disabledWhen":"!titleDetailExists || titleDetailDuplicated"}}]}}],"readonly":false,"htmlClass":"section-body"}}],"readonly":false,"htmlClass":"section"}},{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div>\n  <div class=\"alert alert-info\">\n    The titleDetailExists flag is: {{ evalExpr(\"titleDetailExists\") }} <br/>\n    The titleDetailDuplicated flag is: {{ evalExpr(\"titleDetailDuplicated\") }} <br/>\n    The differentOwnership flag is: {{ evalExpr(\"differentOwnership\") }} <br/>\n  </div>\n  <div class=\"alert alert-info\">\n    evalExpr(\"$$ctrl$$\").model:\n    <pre>{{ evalExpr(\"$$ctrl$$\").model | json  }}</pre>\n  </div>\n  <div class=\"alert alert-info\">\n    model === evalExpr(\"$$ctrl$$\").model:\n    <pre>{{ model === evalExpr(\"$$ctrl$$\").model }}</pre>\n  </div>\n  <div class=\"alert alert-info\">\n    evalExpr(\"$$ctrl$$\").parentModel:\n    <pre>{{ evalExpr(\"$$ctrl$$\").parentModel | json }}</pre>\n  </div>\n</div>","title":"For Development Purpose","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5,"condition":"false"},"sfSchemaProperties":{}}],"type":"root"},"sfSchemaProperties":{}}';
  INSERT INTO SERVICES.SFB_FORM_DESIGN (ID, KEY, VERSION, NAME, DND_MODEL) VALUES (CORE.ILIS_ID.NEXTVAL, 'priorityNoticeLodgeForm-addTitleWithPortionOfLandInfo', 82, null, vClobVal);

  vClobVal := '{"sfFormProperties":{"items":[{"key":"integerInput","editorId":"sfb-editor-integer","$builder-settings":{"componentName":"Integer Input","dirty":true},"sfFormProperties":{"title":"Hidden modelKeyPlaceholder","type":"number","tooltip":"","placeholder":"","notitle":false,"readonly":false,"focusOnStart":false,"htmlClass":"","condition":"false"},"sfSchemaProperties":{"required":false,"type":"integer"}},{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div class=\"section lookup\" ng-init=\"limit=50;orderByField=''code'';reverse=false\">\n  <div class=\"section-header\">\n    <h3>Lookup Values</h3>\n  </div>\n  <div class=\"section-body\">\n    <h3>Select a value form the list below</h3>\n    <label>Search: <input type=\"search\" ng-model=\"search\"></label>\n    <span style=\"margin: 0 10px\"></span>\n    <label>Show\n      <select ng-model=\"limit\">\n        <option value=\"50\">50</option>\n        <option value=\"100\">100</option>\n        <option value=\"200\">200</option>\n        <option value=\"99999999\">Show All</option>\n      </select> entries\n    </label>\n    <table class=\"beanTable lookup\">\n      <thead>\n      <tr>\n        <th ng-click=\"reverse=(orderByField===''code''?!reverse:reverse);orderByField=''code''\" style=\"width: 50%\">Code</th>\n        <th ng-click=\"reverse=(orderByField===''name''?!reverse:reverse);orderByField=''name''\">Name</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr ng-repeat=\"agent in templateData | filter:{''name'':search} | orderBy:orderByField:reverse | limitTo:limit track by $index\"\n          ng-click=\"model.agentCode=agent.code;evalExpr(''$$ctrl$$'').submitModal()\"\n          ng-class=\"{''row0'':$even, ''row1'':$odd}\">\n        <td>{{ agent.code }}</td>\n        <td>{{ agent.name }}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>","title":"Agent Selector Table","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5,"dataURL":"/products/priorityNotice/pnAgentLookup"},"sfSchemaProperties":{}},{"editorId":"sfb-editor-button","$builder-settings":{"componentName":"Button","dirty":true},"sfFormProperties":{"type":"button","btnRefId":"save","title":"Hidden Save Placeholder","style":"btn-success","onClick":"$$ctrl$$.save(form)","condition":"false"}}],"type":"root"},"sfSchemaProperties":{}}';
  INSERT INTO SERVICES.SFB_FORM_DESIGN (ID, KEY, VERSION, NAME, DND_MODEL) VALUES (CORE.ILIS_ID.NEXTVAL, 'priorityNoticeLodgeForm-agentSelector', 44, null, vClobVal);

  vClobVal := '{"sfFormProperties":{"items":[{"key":"integerInput","editorId":"sfb-editor-integer","$builder-settings":{"componentName":"Integer Input","dirty":true},"sfFormProperties":{"title":"Hidden modelKeyPlaceholder","type":"number","tooltip":"","placeholder":"","notitle":false,"readonly":false,"focusOnStart":false,"htmlClass":"","condition":"false"},"sfSchemaProperties":{"required":false,"type":"integer"}},{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div class=\"section lookup\" ng-init=\"limit=50;orderByField=''dealingType'';reverse=false\">\n  <div class=\"section-header\">\n    <h3>Lookup Values</h3>\n  </div>\n  <div class=\"section-body\">\n    <h3>Select a value form the list below</h3>\n    <label>Search: <input type=\"search\" ng-model=\"search\"></label>\n    <span style=\"margin: 0 10px\"></span>\n    <label>Show\n      <select ng-model=\"limit\">\n        <option value=\"50\">50</option>\n        <option value=\"100\">100</option>\n        <option value=\"200\">200</option>\n        <option value=\"99999999\">Show All</option>\n      </select> entries\n    </label>\n    <table class=\"beanTable lookup\">\n      <thead>\n      <tr>\n        <th ng-click=\"reverse=(orderByField===''dealingType''?!reverse:reverse);orderByField=''dealingType''\" style=\"width: 50%\">Dealing Type</th>\n        <th ng-click=\"reverse=(orderByField===''label''?!reverse:reverse);orderByField=''label''\">Label</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr ng-repeat=\"dealingMetadata in templateData | filter:{''dealingType'':search} | orderBy:orderByField:reverse | limitTo:limit track by $index\"\n          ng-click=\"model.dealingType=dealingMetadata.dealingType;evalExpr(''$$ctrl$$'').submitModal()\"\n          ng-class=\"{''row0'':$even, ''row1'':$odd}\">\n        <td>{{ dealingMetadata.dealingType }}</td>\n        <td>{{ dealingMetadata.label }}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>","title":"DealingType Selector Table","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5,"dataURL":"/products/priorityNotice/pnDealingTypeLookup"},"sfSchemaProperties":{}},{"editorId":"sfb-editor-button","$builder-settings":{"componentName":"Button","dirty":true},"sfFormProperties":{"type":"button","btnRefId":"save","title":"Hidden Save Placeholder","style":"btn-success","onClick":"$$ctrl$$.save(form)","condition":"false"}}],"type":"root"},"sfSchemaProperties":{}}';
  INSERT INTO SERVICES.SFB_FORM_DESIGN (ID, KEY, VERSION, NAME, DND_MODEL) VALUES (CORE.ILIS_ID.NEXTVAL, 'priorityNoticeLodgeForm-dealingTypeSelector', 9, null, vClobVal);

  vClobVal := '{"sfFormProperties":{"items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Header","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<h3>Dealing Details</h3>","title":"<h3>Dealing Details</h3>","type":"help"},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-header"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Body","items":[{"key":"dealingType","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true},"sfFormProperties":{"title":"Dealing Type","type":"text","notitle":false,"readonly":false,"focusOnStart":false,"feedback":false,"htmlClass":"inline-element sailis-lookup-input","ngModelOptions":{"updateOn":"blur"},"validationMessage":{"remoteValidation":"Invalid dealing type. Please select a valid value from the lookup."}},"sfSchemaProperties":{"required":true,"type":"string","remoteValidation":"/products/priorityNotice/pnDealingTypeCheckValid?dealingType={model.dealingType}"}},{"editorId":"sfb-editor-modal-form","$builder-settings":{"componentName":"Modal Form","dirty":true},"sfFormProperties":{"type":"rds-asf-modal-form","title":"...","style":"btn btn-default","saveBehaviour":"update","formId":"priorityNoticeLodgeForm-dealingTypeSelector","htmlClass":"inline-element"}},{"editorId":"sfb-editor-fieldset","$builder-settings":{"componentName":"Field Set","dirty":true},"sfFormProperties":{"type":"fieldset","title":"Associated Dealing","items":[{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div ng-init=\"model.assocDealings = model.assocDealings ? model.assocDealings : [{}]\">\n  <table class=\"beanTable\">\n    <thead>\n    <tr>\n      <th>Associated Dealing Number</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"assocDealing in model.assocDealings track by $index\" ng-class=\"{\n      ''row0'': $index % 2 === 0,\n      ''row1'': $index % 2 !== 0\n    }\">\n      <td class=\"assocDealing\">\n        <div class=\"field required\" >\n          <input type=\"text\" name=\"assocDealing{{$index}}AssociatedDealingId\" ng-model=\"assocDealing.associatedDealingId\" ng-required=\"true\" class=\"medsmall\">\n          <div ng-show=\"evalExpr(''modalFormCtrl'')[''assocDealing'' + $index + ''AssociatedDealingId''].$dirty\">\n            <ng-messages for=\"evalExpr(''modalFormCtrl'')[''assocDealing'' + $index + ''AssociatedDealingId''].$error\" role=\"alert\">\n              <div ng-message=\"required\"><span class=\"field-error noLabel\">Associated Dealing Number must be entered.</span></div>\n            </ng-messages>\n          </div>\n        </div>\n      </td>\n      <td> <button ng-click=\"model.assocDealings.splice($index, 1)\">Remove</button> </td>\n    </tr>\n    </tbody>\n  </table>\n  <div ng-if=\"true\"> <!-- Without this ng-if, the counter below will not be registered to the form controller... So wierd.. (angularjs v1.6.6) -->\n    <input type=\"number\" name=\"assocDealingsCount\" ng-model=\"model.assocDealings.length\" ng-min=\"1\" class=\"hidden\">\n    <ng-messages for=\"evalExpr(''modalFormCtrl'').assocDealingsCount.$error\" role=\"alert\"\n                 ng-if=\"evalExpr(''modalFormCtrl'').assocDealingsCount.$dirty\">\n      <div ng-message=\"min\"><span class=\"field-error noLabel\">Associated Dealing Number must be entered.</span></div>\n    </ng-messages>\n  </div>\n  <button type=\"button\" class=\"dynamicAddmoreButton\" ng-click=\"model.assocDealings.push({})\">\n    Add More\n  </button>\n</div>","title":"Associated Dealings Editor","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5},"sfSchemaProperties":{}}],"readonly":false,"condition":"utils.hasAssociatedDealings(model.dealingType)"}},{"editorId":"sfb-editor-fieldset","$builder-settings":{"componentName":"Field Set","dirty":true},"sfFormProperties":{"type":"fieldset","title":"Incoming Party","items":[{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div ng-init=\"model.incomingParties = model.incomingParties ? model.incomingParties : [{}]\">\n  <table class=\"beanTable\">\n    <thead>\n    <tr>\n      <th>Given Names</th>\n      <th>Family/Organisation Name</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"dealingParty in model.incomingParties track by $index\" ng-class=\"{\n      ''row0'': $index % 2 === 0,\n      ''row1'': $index % 2 !== 0\n    }\">\n      <td class=\"givenNames\">\n        <div class=\"field\">\n          <input type=\"text\" ng-model=\"dealingParty.givenNames\" class=\"medsmall\">\n        </div>\n      </td>\n      <td class=\"familyOrganisationName\">\n        <div class=\"field required\">\n          <input type=\"text\" name=\"dealingParty{{$index}}FamilyOrganisationName\" ng-model=\"dealingParty.familyOrganisationName\" ng-required=\"true\" class=\"medsmall\">\n          <div ng-show=\"evalExpr(''modalFormCtrl'')[''dealingParty'' + $index + ''FamilyOrganisationName''].$dirty\">\n            <ng-messages for=\"evalExpr(''modalFormCtrl'')[''dealingParty'' + $index + ''FamilyOrganisationName''].$error\" role=\"alert\">\n              <div ng-message=\"required\"><span class=\"field-error noLabel\">Family or organisation name must be entered</span></div>\n            </ng-messages>\n          </div>\n        </div>\n      </td>\n      <td> <button ng-click=\"model.incomingParties.splice($index, 1)\">Remove</button> </td>\n    </tr>\n    </tbody>\n  </table>\n  <div ng-if=\"true\"> <!-- Without this ng-if, the counter below will not be registered to the form controller... So wierd.. (angularjs v1.6.6) -->\n    <input type=\"number\" name=\"incomingPartiesCount\" ng-model=\"model.incomingParties.length\" ng-min=\"1\" class=\"hidden\">\n    <ng-messages for=\"evalExpr(''modalFormCtrl'').incomingPartiesCount.$error\" role=\"alert\"\n                 ng-if=\"evalExpr(''modalFormCtrl'').incomingPartiesCount.$dirty\">\n      <div ng-message=\"min\"><span class=\"field-error noLabel\">Incoming party must be entered.</span></div>\n    </ng-messages>\n  </div>\n  <button type=\"button\" class=\"dynamicAddmoreButton\" ng-click=\"model.incomingParties.push({})\">\n    Add More\n  </button>\n</div>","title":"Incoming Parties Editor","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5},"sfSchemaProperties":{}}],"readonly":false,"condition":"utils.hasIncomingParties(model.dealingType)"}},{"editorId":"sfb-editor-fieldset","$builder-settings":{"componentName":"Field Set","dirty":true},"sfFormProperties":{"type":"fieldset","title":"Select Titles Affected In This Dealing","items":[{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div ng-init=\"model.titleReferences = model.titleReferences ? model.titleReferences : [{}]\">\n  {{ evalExpr(''$$ctrl$$'').titleReferencesCount = utils._(model.titleReferences).omitBy(utils._.isNil).filter(''titleSelectedFlag'').value().length | json | limitTo:0 }}\n  <table class=\"beanTable\">\n    <thead>\n    <tr>\n      <th>\n        <div id=\"HELP_Select Titles Affected In This Dealing\" class=\"hiddenHelp\">\n          <div class=\"fieldHelpIcon\"></div>\n          <span><div class=\"fieldHelpTitle\">SAILIS Help</div><div class=\"fieldHelpText\">Select the affected Title(s) for this dealing, at least one must be selected.</div></span>\n        </div>\n      </th>\n      <th>Title</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"affectedTitle in evalExpr(''$$ctrl$$'').parentModel.affectedTitles track by $index\" ng-class=\"{\n      ''row0'': $even,\n      ''row1'': $odd\n    }\">\n      <td class=\"titleSelectedFl\">\n        <div class=\"field\">\n          <input type=\"checkbox\" value=\"true\" class=\"medsmall\"\n                 ng-model=\"model.titleReferences[$index].titleSelectedFlag\"\n                 ng-init=\"evalExpr(''$$ctrl$$'').parentModel.affectedTitles.length === 1 ? (model.titleReferences[$index].titleSelectedFlag = true): '''';\">\n        </div>\n      </td>\n      <td class=\"titleReference\">\n        <span>{{ utils.getLocationOrPortionDescription(affectedTitle) }}</span>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n  <div ng-if=\"true\"> <!-- Without this ng-if, the counter below will not be registered to the form controller... So wierd.. (angularjs v1.6.6) -->\n    <input type=\"number\" name=\"titleReferencesCount\" ng-model=\"evalExpr(''$$ctrl$$'').titleReferencesCount\" ng-min=\"1\" class=\"hidden\">\n    <ng-messages for=\"evalExpr(''modalFormCtrl'').titleReferencesCount.$error\" role=\"alert\"\n                 ng-if=\"evalExpr(''modalFormCtrl'').titleReferencesCount.$dirty\">\n      <div ng-message=\"min\"><span class=\"field-error noLabel\">{{utils.getDealingTypeDescription(model.dealingType)}} should affect at least one title</span></div>\n    </ng-messages>\n  </div>\n</div>","title":"Titles Affected Editor","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5},"sfSchemaProperties":{}}],"readonly":false}},{"editorId":"sfb-editor-btn-group","$builder-settings":{"componentName":"Button Group"},"sfFormProperties":{"type":"btn-group","title":"Button Group","items":[{"editorId":"sfb-editor-button","$builder-settings":{"componentName":"Modal Save Button","dirty":true},"sfFormProperties":{"type":"rds-asf-modal-save","btnRefId":"save","title":"Save","style":"btn btn-primary","onClick":"$$ctrl$$.submitModal(true);"}},{"editorId":"sfb-editor-button","$builder-settings":{"componentName":"Modal Cancel Button","dirty":true},"sfFormProperties":{"type":"rds-asf-modal-cancel","btnRefId":"cancel","title":"Cancel","style":"btn btn-default","onClick":"$$ctrl$$.cancelModal();"}}]}}],"readonly":false,"htmlClass":"section-body"}}],"readonly":false,"htmlClass":"section"}}],"type":"root"},"sfSchemaProperties":{}}';
  INSERT INTO SERVICES.SFB_FORM_DESIGN (ID, KEY, VERSION, NAME, DND_MODEL) VALUES (CORE.ILIS_ID.NEXTVAL, 'priorityNoticeLodgeForm-addDealingDetails', 63, null, vClobVal);

  vClobVal := '{"sfFormProperties":{"items":[{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<screen-messages focus-on-change=\"true\" message-type-to-class=\"{''error'':''error''}\" class=\"messages\"></screen-messages>","title":"Error Messages","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5},"sfSchemaProperties":{}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Agent Detail Section","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Header","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<h3>Agent Details</h3>","title":"<h3>Agent Details</h3>","type":"help"},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-header"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Body","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Agent Chooser for LSG User","items":[{"key":"agentCode","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","keyManuallyEdited":true,"dirty":true},"sfFormProperties":{"title":"Agent","type":"text","notitle":false,"readonly":false,"focusOnStart":false,"feedback":false,"fieldHtmlClass":"large","htmlClass":"inline-element sailis-field","ngModelOptions":{"updateOn":"blur"},"validationMessage":{"remoteValidation":"The agent code is invalid"}},"sfSchemaProperties":{"required":true,"type":"string","remoteValidation":"/products/priorityNotice/pnAgentDetail?agentCode={model.agentCode}"}},{"editorId":"sfb-editor-modal-form","$builder-settings":{"componentName":"Modal Form","keyManuallyEdited":true,"dirty":true},"sfFormProperties":{"type":"rds-asf-modal-form","title":"...","style":"btn btn-default","formId":"priorityNoticeLodgeForm-agentSelector","saveBehaviour":"merge","htmlClass":"inline-element"}},{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<div id=\"HELP_Agent\" class=\"hiddenHelp\"><div class=\"fieldHelpIcon\"></div><span><div class=\"fieldHelpTitle\">SAILIS Help</div><div class=\"fieldHelpText\">The Agent Code you select will be shown as the Lodging Agent for the Priority Notice and be dispayed on a search of the Priority Notice</div></span></div>","title":"Helper Tip","type":"help","htmlClass":"inline-element"},"sfSchemaProperties":{}}],"readonly":false,"condition":"env.isLsgUserFlag === true"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Agent Chooser for Non-LSG User","items":[{"key":"agentCode","editorId":"sfb-editor-dynamic-select","$builder-settings":{"componentName":"Dynamic Single Select","keyManuallyEdited":true,"dirty":true},"sfFormProperties":{"type":"rds-dynamic-single-select","title":"Agent","optionsURL":"/products/priorityNotice/pnAgentTitleMap","withBlankOption":false,"blankOptionText":"-- Please Select --","notitle":false,"readonly":false,"focusOnStart":false,"htmlClass":"inline-element","fieldHtmlClass":"large","validationMessage":{"remoteValidation":"The agent code is invalid"}},"sfSchemaProperties":{"required":false,"type":"string","remoteValidation":"/products/priorityNotice/pnAgentDetail?agentCode={model.agentCode}"}},{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<div id=\"HELP_Agent\" class=\"hiddenHelp\"><div class=\"fieldHelpIcon\"></div><span><div class=\"fieldHelpTitle\">SAILIS Help</div><div class=\"fieldHelpText\">The Agent Code you select will be shown as the Lodging Agent for the Priority Notice and be dispayed on a search of the Priority Notice</div></span></div>","title":"Helper Tip","type":"help","htmlClass":"inline-element"},"sfSchemaProperties":{}}],"readonly":false,"condition":"!env.isLsgUserFlag"}},{"editorId":"sfb-editor-load-data-section","$builder-settings":{"componentName":"Load Data Section","dirty":true},"sfFormProperties":{"type":"load-data-section","title":"Agent Detail Load Data Section","readonly":true,"dataURL":"/products/priorityNotice/pnAgentDetail?agentCode={model.agentCode}","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Plain Read-only Text Fields Section","items":[{"key":"lodgingAgent.code","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true,"keyManuallyEdited":true},"sfFormProperties":{"title":"Agent Code (Hidden)","type":"text","notitle":false,"readonly":false,"focusOnStart":false,"fieldHtmlClass":"large","feedback":false,"htmlClass":"hidden","ngModelOptions":{"updateOn":"default"}},"sfSchemaProperties":{"required":false,"type":"string"}},{"key":"lodgingAgent.name","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true,"keyManuallyEdited":true},"sfFormProperties":{"title":"Agent Name","type":"text","notitle":false,"readonly":false,"focusOnStart":false,"fieldHtmlClass":"large","feedback":false,"htmlClass":"field","ngModelOptions":{"updateOn":"default"}},"sfSchemaProperties":{"required":false,"type":"string"}},{"key":"lodgingAgent.contactName","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true,"keyManuallyEdited":true},"sfFormProperties":{"title":"Contact Name","type":"text","notitle":false,"readonly":false,"focusOnStart":false,"fieldHtmlClass":"large","feedback":false,"htmlClass":"field","ngModelOptions":{"updateOn":"default"}},"sfSchemaProperties":{"required":false,"type":"string"}},{"key":"lodgingAgent.phoneNo","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true,"keyManuallyEdited":true},"sfFormProperties":{"title":"Phone","type":"text","notitle":false,"readonly":false,"focusOnStart":false,"fieldHtmlClass":"large","feedback":false,"htmlClass":"field","ngModelOptions":{"updateOn":"default"}},"sfSchemaProperties":{"required":false,"type":"string"}},{"key":"lodgingAgent.email","editorId":"sfb-editor-text-email","$builder-settings":{"componentName":"Email Input","dirty":true,"keyManuallyEdited":true},"sfFormProperties":{"title":"Email","type":"text","validationMessage":{"pattern":"Please enter a valid email address"},"notitle":false,"readonly":false,"focusOnStart":false,"fieldHtmlClass":"large","htmlClass":"field"},"sfSchemaProperties":{"required":false,"type":"string","pattern":"^[-a-z0-9~!$%^&*_=+}{\\''?]+(\\.[-a-z0-9~!$%^&*_=+}{\\''?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$"}}],"readonly":false,"condition":"model.lodgingAgent.code","htmlClass":"plain-text"}}],"targetKey":"lodgingAgent","hideErrorFeedback":true,"retryOn202":false,"retryAttempts":120,"retryDelay":5}},{"key":"clientReference","editorId":"sfb-editor-text","$builder-settings":{"componentName":"String Input","dirty":true,"keyManuallyEdited":true},"sfFormProperties":{"title":"Customer Reference","type":"text","notitle":false,"readonly":false,"focusOnStart":false,"fieldHtmlClass":"large","htmlClass":"inline-element field"},"sfSchemaProperties":{"required":false,"type":"string"}},{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<div id=\"HELP_Customer Reference\" class=\"hiddenHelp\"><div class=\"fieldHelpIcon\"></div><span><div class=\"fieldHelpTitle\">SAILIS Help</div><div class=\"fieldHelpText\">Your Customer Reference cannot be greater than 20 characters<br>This reference will be shown on:<br>- Priority Notice Details Screen<br>- Transaction Enquiry Search<br>- Product Transaction History Report</div></span></div>","title":"Helper Tip","type":"help","htmlClass":"inline-element"},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-body"}}],"readonly":false,"htmlClass":"section"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Applicant Details Section","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Header","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<h3>Applicant Details</h3>","title":"<h3>Applicant Details</h3>","type":"help"},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-header"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Body","items":[{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div ng-init=\"model.applicantDetails = model.applicantDetails ? model.applicantDetails : [{}]\">\n  <table class=\"beanTable\">\n    <thead>\n    <tr>\n      <th>Given Name(s)</th>\n      <th>Family/Organisation Name</th>\n      <th>ACN</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"applicantDetail in model.applicantDetails track by $index\" ng-class=\"{\n      ''row0'': $even,\n      ''row1'': $odd\n    }\">\n      <td class=\"appGivenNames\">\n        <div class=\"field\">\n          <input type=\"text\" ng-model=\"applicantDetail.givenName\" class=\"xlarge\">\n        </div>\n      </td>\n      <td class=\"appFamilyOrganisationName\">\n        <div class=\"field required\">\n          <input type=\"text\" name=\"applicantDetail{{$index}}FamilyOrOrganisationName\" ng-model=\"applicantDetail.familyOrOrganisationName\" ng-required=\"true\" class=\"xlarge\">\n          <div ng-show=\"evalExpr(''formCtrl'')[''applicantDetail'' + $index + ''FamilyOrOrganisationName''].$dirty\">\n            <ng-messages for=\"evalExpr(''formCtrl'')[''applicantDetail'' + $index + ''FamilyOrOrganisationName''].$error\" role=\"alert\">\n              <div ng-message=\"required\"><span class=\"field-error noLabel\">Family or Organisation name is required</span></div>\n            </ng-messages>\n          </div>\n        </div>\n      </td>\n      <td class=\"appAcn\">\n        <div class=\"field\">\n          <input type=\"text\" ng-model=\"applicantDetail.acn\" class=\"medsmall\">\n        </div>\n      </td>\n      <td> <button ng-click=\"model.applicantDetails.splice($index, 1)\">Remove</button> </td>\n    </tr>\n    </tbody>\n  </table>\n  <div ng-if=\"true\"> <!-- Without this ng-if, the applicantDetailsCount will not be registered to the form controller... So wierd.. (angularjs v1.6.6) -->\n    <input type=\"number\" name=\"applicantDetailsCount\" ng-model=\"model.applicantDetails.length\" ng-min=\"1\" class=\"hidden\">\n    <ng-messages for=\"evalExpr(''formCtrl'').applicantDetailsCount.$error\" role=\"alert\">\n      <div ng-message=\"min\"><span class=\"field-error noLabel\">At least one applicant details is required.</span></div>\n    </ng-messages>\n  </div>\n  <button type=\"button\" class=\"dynamicAddmoreButton\" ng-click=\"model.applicantDetails.push({})\">\n    Add More\n  </button>\n</div>","title":"Applicant Details Table","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-body"}}],"readonly":false,"htmlClass":"section"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Title Details Section","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Header","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<h3>Title Details</h3>","title":"<h3>Title Details</h3>","type":"help"},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-header"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Body","items":[{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div ng-init=\"model.affectedTitles = model.affectedTitles ? model.affectedTitles : []\">\n  <table class=\"beanTable\">\n    <thead>\n    <tr>\n      <th>Title</th>\n      <th>Whole/Portion</th>\n      <th>Portion Description</th>\n      <th>Property Location</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"titleDetail in model.affectedTitles track by $index\" ng-class=\"{\n      ''row0'': $even,\n      ''row1'': $odd\n    }\">\n      <td> {{ titleDetail.titleReference }} </td>\n      <td> {{ utils.getPortionDescription(titleDetail) ? \"Portion\" : \"Whole\" }} </td>\n      <td> {{ utils.getPortionDescription(titleDetail) ? utils.getPortionDescription(titleDetail) : \"\" }} </td>\n      <td> {{ !utils.getPortionDescription(titleDetail) ? titleDetail.propertyLocation : \"\" }} </td>\n      <td>\n        <button\n          ng-disabled=\"utils.isAffectedTitleIndexReferencedInDealings($index, model.dealings)\"\n          ng-click=\"model.affectedTitles.splice($index, 1);utils.removeTitleReferenceByIndexFromDealingsIfAny($index, model.dealings)\">Remove</button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n  <div ng-if=\"true\">\n    <input type=\"number\" name=\"affectedTitlesCount\" ng-model=\"model.affectedTitles.length\" ng-min=\"1\" class=\"hidden\">\n    <ng-messages for=\"evalExpr(''formCtrl'').affectedTitlesCount.$error\" role=\"alert\"\n                 ng-if=\"evalExpr(''formCtrl'').affectedTitlesCount.$dirty\">\n      <div ng-message=\"min\"><span class=\"field-error noLabel\">At least one Title must be entered to lodge a Priority Notice.</span></div>\n    </ng-messages>\n  </div>\n</div>","title":"Title Details Table","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5},"sfSchemaProperties":{}},{"editorId":"sfb-editor-modal-form","$builder-settings":{"componentName":"Modal Form","keyManuallyEdited":true,"dirty":true},"sfFormProperties":{"type":"rds-asf-modal-form","title":"Add Titles","style":"btn btn-default","saveBehaviour":"add","key":"titleDetails","formId":"priorityNoticeLodgeForm-addTitleWithPortionOfLandInfo"},"key":"affectedTitles"}],"readonly":false,"htmlClass":"section-body"}}],"readonly":false,"htmlClass":"section"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Dealing Details Section","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Header","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<h3>Dealing Details</h3>","title":"<h3>Dealing Details</h3>","type":"help"},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-header"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Body","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<div>Please add dealings in lodgement order.</div>","title":"Please add dealings in lodgement order","type":"help"},"sfSchemaProperties":{}},{"editorId":"sfb-editor-dynamic-template-loader","$builder-settings":{"componentName":"Dynamic Angular Template","dirty":true},"sfFormProperties":{"template":"<div ng-init=\"model.dealings = model.dealings ? model.dealings : []\">\n  <table class=\"beanTable\">\n    <thead>\n    <tr>\n      <th>Dealing Type</th>\n      <th>Associated Dealings</th>\n      <th>Incoming Party</th>\n      <th>Title Reference</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"dealing in model.dealings track by $index\" ng-class=\"{\n      ''row0'': $even,\n      ''row1'': $odd\n    }\">\n      <td>{{ dealing.dealingType }}</td>\n      <td>\n        <div ng-repeat=\"assocDealing in dealing.assocDealings\" ng-if=\"assocDealing.associatedDealingId\">\n          {{ assocDealing.associatedDealingId }}\n        </div>\n      </td>\n      <td>\n        <div ng-repeat=\"incomingParty in dealing.incomingParties\" ng-if=\"utils.getIncomingPartyDescription(incomingParty)\">\n          {{ utils.getIncomingPartyDescription(incomingParty) }}\n        </div>\n      </td>\n      <td>\n        <div ng-repeat=\"titleReference in dealing.titleReferences track by $index\">\n          <div ng-if=\"titleReference && titleReference.titleSelectedFlag === true\">\n            {{ utils.getTitleReferenceWithLocationOrPortionDetails(model.affectedTitles[$parent.$index]) }}\n          </div>\n        </div>\n      </td>\n      <td>\n        <button ng-click=\"model.dealings.splice($index, 2, model.dealings[$index+1], model.dealings[$index])\"\n                ng-disabled=\"$last\">&darr;</button>\n        <button ng-click=\"model.dealings.splice($index-1, 2, model.dealings[$index], model.dealings[$index-1])\"\n                ng-disabled=\"$first\">&uarr;</button>\n        <button ng-init=\"form = {\n                  ''key'': [''dealings'', ''''],\n                  ''formId'': ''priorityNoticeLodgeForm-addDealingDetails'',\n                  ''saveBehaviour'': ''assign''\n                }\"\n                ng-model=\"model.dealings[$index]\" rds-modal-form ng-click=\"modalFormCtrl.modalForm();\">Edit</button>\n        <button ng-click=\"model.dealings.splice($index, 1)\">Remove</button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n  <div ng-if=\"true\"> <!-- Without this ng-if, the dealingsCount will not be registered to the form controller... So wierd.. (angularjs v1.6.6) -->\n    <input type=\"number\" name=\"dealingsCount\" ng-model=\"model.dealings.length\" ng-min=\"1\" class=\"hidden\">\n    <ng-messages for=\"evalExpr(''formCtrl'').dealingsCount.$error\" role=\"alert\"\n                 ng-if=\"evalExpr(''formCtrl'').dealingsCount.$dirty\">\n      <div ng-message=\"min\"><span class=\"field-error noLabel\">Dealing details for at least one Dealing must be entered.</span></div>\n    </ng-messages>\n  </div>\n</div>","title":"Dealing Details Table","type":"dynamic-template-loader","retryOn202":false,"retryAttempts":120,"retryDelay":5},"sfSchemaProperties":{}},{"editorId":"sfb-editor-modal-form","$builder-settings":{"componentName":"Modal Form","keyManuallyEdited":true,"dirty":true},"sfFormProperties":{"type":"rds-asf-modal-form","title":"Add Dealings","style":"btn btn-default","saveBehaviour":"add","formId":"priorityNoticeLodgeForm-addDealingDetails","launchCondition":"model.affectedTitles && model.affectedTitles.length","launchConditionFailureMessage":"At least one Title must be entered to lodge a Priority Notice."},"key":"dealings"}],"readonly":false,"htmlClass":"section-body"}}],"readonly":false,"htmlClass":"section"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Lodge Priority Notice Section","items":[{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Header","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<h3>Lodge Priority Notice</h3>","title":"<h3>Lodge Priority Notice</h3>","type":"help"},"sfSchemaProperties":{}}],"readonly":false,"htmlClass":"section-header"}},{"editorId":"sfb-editor-section","$builder-settings":{"componentName":"Section (div)","dirty":true},"sfFormProperties":{"type":"section","title":"Section - Body","items":[{"editorId":"sfb-editor-help","$builder-settings":{"componentName":"HTML Content","dirty":true},"sfFormProperties":{"helpvalue":"<p>The recording of this Priority Notice is requested.</p>","title":"The recording of this Priority Notice is requested.","type":"help"},"sfSchemaProperties":{}},{"key":"certifications","editorId":"sfb-editor-key-container","$builder-settings":{"componentName":"Tuple","keyManuallyEdited":true,"dirty":true},"sfFormProperties":{"type":"tuple","title":"Certifications","items":[{"key":"booleanCheckbox","editorId":"sfb-editor-boolean-checkbox","$builder-settings":{"componentName":"Boolean Checkbox","keyManuallyEdited":true,"dirty":true},"sfFormProperties":{"type":"checkbox","title":"The evidence supporting this Priority Notice has been retained","tooltip":"","placeholder":"","readonly":false,"focusOnStart":false,"validationMessage":{"required":"Certifications are required to be acknowledged prior to lodging the Priority Notice."}},"sfSchemaProperties":{"type":"boolean","default":false,"required":true}},{"key":"booleanCheckbox1","editorId":"sfb-editor-boolean-checkbox","$builder-settings":{"componentName":"Boolean Checkbox","keyManuallyEdited":true,"dirty":true},"sfFormProperties":{"type":"checkbox","title":"Reasonable steps to ensure that this Priority Notice is correct and compliant with relevant legislation and any Prescribed Requirement have been taken","tooltip":"","placeholder":"","readonly":false,"focusOnStart":false,"validationMessage":{"required":"Certifications are required to be acknowledged prior to lodging the Priority Notice."}},"sfSchemaProperties":{"type":"boolean","default":false,"required":true}}]},"sfSchemaProperties":{"type":"object","items":{"type":"object","properties":{}}}},{"editorId":"sfb-editor-button","$builder-settings":{"componentName":"Button","dirty":true},"sfFormProperties":{"type":"button","btnRefId":"button","title":"Lodge","style":"btn-default","onClick":"$$ctrl$$.submit({''confirmMessage'': utils.confirmMessage, ''httpPendingFlagHolder'': form})"}}],"readonly":false,"htmlClass":"section-body"}}],"readonly":false,"htmlClass":"section"}}],"type":"root"},"sfSchemaProperties":{}}';
  INSERT INTO SERVICES.SFB_FORM_DESIGN (ID, KEY, VERSION, NAME, DND_MODEL) VALUES (CORE.ILIS_ID.NEXTVAL, 'priorityNoticeLodgeForm', 205, null, vClobVal);
  COMMIT;
END;
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>oracle.block.sample.long-text</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>source.sql, text.plain</scope>
</snippet>
