<snippet>
  <content><![CDATA[
@RequestMapping(
  value = "${1:/upload}",
  headers = "content-type=multipart/*",
  produces = MediaType.TEXT_HTML_VALUE,
  method = RequestMethod.POST
)
public String upload(@RequestParam("file") MultipartFile file) throws IOException
{
  // ...

  return "redirect:uploadSuccess";
}

@RequestMapping(
  value = "${1:/upload}",
  headers = "content-type=multipart/*",
  produces = MediaType.TEXT_HTML_VALUE,
  method = RequestMethod.POST
)
public String upload(@RequestParam("files") MultipartFile[] files) throws IOException
{
  // ...

  return "redirect:uploadSuccess";
}

@RequestMapping(
  value = "${1:/upload}",
  headers = "content-type=multipart/*",
  produces = MediaType.TEXT_HTML_VALUE,
  method = RequestMethod.POST
)
public String upload(@RequestParam("file") Part file) throws IOException
{
  // ...

  return "redirect:uploadSuccess";
}

@RequestMapping(
  value = "${1:/upload}",
  headers = "content-type=multipart/*",
  produces = MediaType.TEXT_HTML_VALUE,
  method = RequestMethod.POST
)
public String upload(@RequestParam("files") Part[] files) throws IOException
{
  // ...

  return "redirect:uploadSuccess";
}
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>spring-mvc.controller.@RequestMapping-method.file-upload.returning-html</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>text.plain, source.java</scope>
</snippet>
