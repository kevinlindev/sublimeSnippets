<snippet>
  <content><![CDATA[
@RequestMapping(value = "${1:/upload}", headers = "content-type=multipart/*", produces = MediaType.APPLICATION_JSON_VALUE, method = RequestMethod.POST)
public @ResponseBody DocumentDto upload(@RequestParam("file") MultipartFile file) throws IOException
{
  // ...

  return documentDto;
}

@RequestMapping(value = "${1:/upload}", headers = "content-type=multipart/*", produces = MediaType.APPLICATION_JSON_VALUE, method = RequestMethod.POST)
public @ResponseBody List<DocumentDto> upload(@RequestParam("files") MultipartFile[] files) throws IOException
{
  // ...

  return documentDtoList;
}

@RequestMapping(value = "${1:/upload}", headers = "content-type=multipart/*", produces = MediaType.APPLICATION_JSON_VALUE, method = RequestMethod.POST)
public @ResponseBody DocumentDto upload(@RequestParam("file") Part file) throws IOException
{
  // ...

  return documentDto;
}

@RequestMapping(value = "${1:/upload}", headers = "content-type=multipart/*", produces = MediaType.APPLICATION_JSON_VALUE, method = RequestMethod.POST)
public @ResponseBody List<DocumentDto> upload(@RequestParam("files") Part[] files) throws IOException
{
  // ...

  return documentDtoList;
}
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>spring-mvc.controller.@RequestMapping-method.file-upload.returning-json</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>text.plain, source.java</scope>
</snippet>
