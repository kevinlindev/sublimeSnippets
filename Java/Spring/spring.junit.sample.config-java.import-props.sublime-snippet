<snippet>
  <content><![CDATA[
import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.core.io.ClassPathResource;

@Configuration
@Import({ TestJpaConfig.class })
@ComponentScan(basePackages = {
        "au.com.rds.schemaformbuilder"
})
public class TestRestBackendConfig
{
  //<context:property-placeholder location="classpath:application.properties"></context:property-placeholder>
  @Bean
  public PropertyPlaceholderConfigurer getPropertyPlaceholderConfigurer()
  {
    PropertyPlaceholderConfigurer ppc = new PropertyPlaceholderConfigurer();
    ppc.setLocation(new ClassPathResource("${1:META-INF/module-name-test-db.properties}"));
    ppc.setIgnoreUnresolvablePlaceholders(true);
    return ppc;
  }
}
${2:#${1}
jdbc.driverClassName=org.h2.Driver
jdbc.url=jdbc:h2:mem:CLA;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
jdbc.username=sa
jdbc.password=

hibernate.dialect=org.hibernate.dialect.H2Dialect
hibernate.show_sql=true
hibernate.hbm2ddl.auto=none
hibernate.generate_statistics=true}
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>spring.junit.sample.config-java.import-props</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>source.java, text.plain</scope>
</snippet>
