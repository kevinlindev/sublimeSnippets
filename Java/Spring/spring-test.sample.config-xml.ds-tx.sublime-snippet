<snippet>
  <content><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!-- Start: In memory database -->
    <!-- User either: -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="\${jdbc.driverClassName}"/>
        <property name="url" value="\${jdbc.url}"/>
        <property name="username" value="\${jdbc.username}"/>
        <property name="password" value="\${jdbc.password}"/>
    </bean>

    <jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS">
        <jdbc:script location="classpath:META-INF/${1:module-name-}test-schema.sql"/>
        <jdbc:script location="classpath:META-INF/${1}test-data.sql"/>
    </jdbc:initialize-database>

    <!-- or: -->
    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:META-INF/${1}test-schema.sql"/>
        <jdbc:script location="classpath:META-INF/${1}test-data.sql"/>
    </jdbc:embedded-database>
    <!-- End: In memory database -->

    <!-- Start: Transaction Support -->
    <bean id="${2}" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    ${1:<!--
      <tx:annotation-driven/>
        == @org.springframework.transaction.annotation.EnableTransactionManagement

      Indicates that transaction configuration is defined by Java 5 annotations
      on bean classes, and that proxies are automatically to be created for the
      relevant annotated beans.

      The default annotations supported are Spring's @Transactional and EJB3's
      @TransactionAttribute (if available).

      Transaction semantics such as propagation settings, the isolation level,
      the rollback rules, etc are all defined in the annotation metadata.

      Attribute: transaction-manager:

      The bean name of the PlatformTransactionManager that is to be used to drive
      transactions.

      This attribute is not required, and only needs to be specified explicitly
      if the bean name of the desired PlatformTransactionManager is not
      'transactionManager'.
    -->}
    <tx:annotation-driven transaction-manager="${2:txManager}"/>
    <!-- End: Transaction Support -->

</beans>
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>spring-test.sample.config-xml.ds-tx</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>text.xml, text.plain</scope>
</snippet>
