<snippet>
  <content><![CDATA[
@RequestMapping(
  value = "${1:/path/to/resources}/{${2:id}}",
  produces = MediaType.APPLICATION_JSON_VALUE,
  method = RequestMethod.PUT
)
public @ResponseBody ${3:YourDto} update(@PathVariable("${2:id}") Long ${2:id}, @RequestBody ${3:YourDto} dto)
{
  requireNonNull(${2:id});
  requireNonNull(dto);
  validateDto(dto, ${3:YourDto}.ValidationGroups.Update.class);
  ${3:YourDto} updated = yourService.update(${2:id}, dto);
  return updated;
}

private void validateDto(${3:YourDto} dto, Class<?> validationGroup)
{
  String objectName = Conventions.getVariableName(dto);
  Errors errors = new BeanPropertyBindingResult(dto, objectName);
  ValidationUtils.invokeValidator(defaultValidator, dto, errors, validationGroup);
  if (errors.hasErrors())
  {
    throw new ValidationException(errors);
  }
}
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>spring-mvc.controller.@RequestMapping-method.PUT.validate-update.json</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>text.plain, source.java</scope>
</snippet>
