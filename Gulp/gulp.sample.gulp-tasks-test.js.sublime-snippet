<snippet>
  <content><![CDATA[
'use strict';

var gulp = require('gulp');
var KarmaServer = require('karma').Server;
var inject = require('gulp-inject');
var bowerFiles = require('main-bower-files');
var runSequence = require('run-sequence');
var plumber = require('gulp-plumber');
var naturalSort = require('gulp-natural-sort');
var angularFilesort = require('gulp-angular-filesort');
var debug = require('gulp-debug');
var webdriverUpdate = require('gulp-protractor').webdriver_update;
var protractor = require('gulp-protractor');
var bs = require('browser-sync').create();

gulp.task('inject-test:vendor', function () {
  var injectOptions = {
    name: 'bower',
    relative: true,
    starttag: '// inject-bower',
    endtag: '// end-inject-bower',
    transform: filepathForKarma
  };

  var stream = gulp.src(settings.karmaConfigFile)
    .pipe(plumber({errorHandler: handleErrors}))
    .pipe(inject(
      gulp.src(
        bowerFiles('**/*.js', {checkExistence: true}), {read: false}
      ).pipe(debug()),
      injectOptions
    )).pipe(gulp.dest(settings.appRoot));

  return stream;
});

gulp.task('inject-test:${1:module-name}:app', function () {
  var injectOpts = {
    relative: true,
    starttag: '// inject-app',
    endtag: '// end-inject-app',
    transform: filepathForKarma,
  };

  return gulp.src(settings.karmaConfigFile)
    .pipe(plumber({errorHandler: handleErrors}))
    .pipe(inject(
      gulp.src([
        settings.src + '**/*.js',
        '!' + settings.bowerComponents + '**/*.js',
        settings.test + 'unit/**/*.spec.js'
      ]).pipe(naturalSort())
        .pipe(angularFilesort())
        .pipe(debug()),
      injectOpts))
    .pipe(gulp.dest(settings.appRoot));

});

gulp.task('inject-test:${1:module-name}:json', function () {
  var injectOpts = {
    relative: true,
    starttag: '// inject-json',
    endtag: '// end-inject-json',
    transform: filepathForKarma,
  };

  return gulp.src(settings.karmaConfigFile)
    .pipe(plumber({errorHandler: handleErrors}))
    .pipe(inject(
      gulp.src([
        settings.test + 'unit/**/*.json'
      ]).pipe(naturalSort())
        .pipe(debug()),
      injectOpts))
    .pipe(gulp.dest(settings.appRoot));
});

gulp.task('inject-test', function () {
  runSequence('inject-test:vendor', 'inject-test:${1:module-name}:app', 'inject-test:${1:module-name}:json');
});

gulp.task('test:karma', function (done) {
  new KarmaServer({
    configFile: settings.karmaConfigFile,
    singleRun: true
  }, done).start();
});

// Downloads/updates the selenium webdriver
gulp.task('webdriver_update', webdriverUpdate);

// Runs the browserSync server, serving the build directory
gulp.task('browserSync_server', function () {
  return bs.init({
    server: {
      baseDir: './build',
      directory: true
    },
    open: false
  });
});

// Runs e2e tests using protractor
gulp.task('test:e2e', ['webdriver_update', 'browserSync_server'], function () {
  return gulp.src(['./test/e2e/*.spec.js'])
    .pipe(protractor.protractor({
      configFile: 'test/e2e/conf.js',
      args: ['--baseUrl', 'http://127.0.0.1:3000']
    }))
    .on('end', function () {
      bs.exit();
    })
    .on('error', function (e) {
      bs.exit();
      throw e;
    });
});

gulp.task('test', function () {
  return runSequence('inject-test', 'test:karma', 'test:e2e');
});

]]></content>
  <tabTrigger>gpsample-gulp/tasks/test.js</tabTrigger>
  <scope>text.plain, source.js</scope>
</snippet>
